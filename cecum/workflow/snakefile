rule target:
    input:
        "data/cecal_qiime/SEQ069/s69_table.qza",
        "data/cecal_qiime/SEQ069/s69_rep_seqs.qza",
        "data/cecal_qiime/SEQ069/s69_denoise_stats.qza",
        "data/cecal_qiime/SEQ070/s70_table.qza",
        "data/cecal_qiime/SEQ070/s70_rep_seqs.qza",
        "data/cecal_qiime/SEQ070/s70_denoise_stats.qza",
        "data/cecal_qiime/SEQ071/s71_table.qza",
        "data/cecal_qiime/SEQ071/s71_rep_seqs.qza",
        "data/cecal_qiime/SEQ071/s71_denoise_stats.qza",
        "data/cecal_qiime/all_cecal_table.qza",
        "data/cecal_qiime/all_cecal_rep_seqs.qza",
        "data/cecal_qiime/tree.qza",
        "data/cecal_qiime/placements.qza",
        "data/cecal_qiime/filt_cecal_table.qza",
        "data/cecal_qiime/rem_cecal_table.qza",
        "data/cecal_qiime/taxonomy.qza",
        "data/cecal_qiime/taxonomy_filtered.qza",
        "data/cecal_qiime/taxonomy_filtered.qzv",
        "data/cecal_qiime/lacto_cecal_table.qza",
        "data/cecal_qiime/lacto_rep_seqs.qza",
        "data/cecal_qiime/lactoOnly_rep_seqs.fasta",
        "data/cecal_qiime/total_sum_scaling.tsv",
        "data/cecal_qiime/total_sum_scaling.biom",
        "data/cecal_qiime/total_sum_scaling.qza",
        "data/cecal_qiime/fasta_files/dna-sequences.fasta",
        "data/cecal_qiime2/tree.qza",
        "data/cecal_qiime2/placements.qza",
        "data/cecal_qiime2/total_sum_filt_table.qza",
        "data/cecal_qiime2/total_sum_rem_table.qza",
        "data/cecal_qiime2/taxonomy.qza",
        "data/cecal_qiime2/taxonomy_filtered.qza",
        "data/cecal_qiime2/taxonomy_filtered.qzv",
        "data/cecal_qiime2/tax_filt_actual.qza",
        "data/core_outputs/bray_curtis_distance_matrix.qza",
        "data/core_outputs/bray_curtis_emperor.qzv",
        "data/core_outputs/bray_curtis_pcoa_results.qza",
        "data/core_outputs/evenness_vector.qza",
        "data/core_outputs/faith_pd_vector.qza",
        "data/core_outputs/jaccard_distance_matrix.qza",
        "data/core_outputs/jaccard_emperor.qzv",
        "data/core_outputs/jaccard_pcoa_results.qza",
        "data/core_outputs/observed_features_vector.qza",
        "data/core_outputs/rarefied_table.qza",
        "data/core_outputs/shannon_vector.qza",
        "data/core_outputs/unweighted_unifrac_distance_matrix.qza",
        "data/core_outputs/unweighted_unifrac_emperor.qzv",
        "data/core_outputs/unweighted_unifrac_pcoa_results.qza",
        "data/core_outputs/weighted_unifrac_distance_matrix.qza",
        "data/core_outputs/weighted_unifrac_emperor.qzv",
        "data/core_outputs/weighted_unifrac_pcoa_results.qza",
        "data/core_outputs/uw_dist_matrix.tsv",
        "data/core_outputs/w_dist_matrix.tsv", 
        "data/core_outputs/shannon_entropy.tsv",
        "data/core_outputs/faith_pd.tsv",
        "data/misc/seq_depth.tsv",
        "data/misc/filt_cecal_processed_metadata.tsv",
        "plots/faith_pd.pdf",
        "plots/shannon_entropy.pdf",
        "stats/faith_diet_results.tsv",
        "stats/faith_dunn.tsv",
        "stats/shannon_diet_results.tsv",
        "stats/shannon_dunn.tsv",
        "plots/faith_stat_vis.pdf",
        "plots/shannon_stat_vis.pdf",
        "plots/unweighted_unifrac_pcoa.pdf",
        "plots/weighted_unifrac_pcoa.pdf",
        "stats/w_adonis_results.tsv",
        "stats/uw_adonis_results.tsv",
        "plots/family_abun1.pdf",
        "plots/family_abun2.pdf",
        "stats/family_abun_lm.tsv",
        "stats/family_abun_dunn.tsv",
        "plots/famAbun_stat_vis.pdf",
        "plots/histopathology.pdf",
        "stats/histopathology_lm.tsv",
        "stats/histopathology_dunn.tsv",
        "plots/neat_toxin.pdf",
        "plots/dil_toxin.pdf",
        "stats/neatToxin_kruskal_test.tsv",
        "stats/neatToxin_dunn_test.tsv",
        "stats/dilToxin_kruskal_test.tsv",
        "stats/dilToxin_dunn_test.tsv",
        "plots/metabolomics.pdf",
        "stats/metab_linear_model.tsv",
        "stats/metab_dunn_test.tsv",
        "stats/metab_kruskal_test.tsv"






rule seq069_demultiplex:
    input:
        "data/cecal_qiime/SEQ069/cecal_s69_barcodes.txt",
        "data/cecal_qiime/SEQ069/s69_paired_end_seqs.qza"
    output:
        "data/cecal_qiime/SEQ069/s69_demux.qza",
        "data/cecal_qiime/SEQ069/s69_demux_details.qza",
        "data/cecal_qiime/SEQ069/s69_demux.qzv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime demux emp-paired \
            --m-barcodes-file ./data/cecal_qiime/SEQ069/cecal_s69_barcodes.txt \
            --m-barcodes-column BarcodeSequence \
            --i-seqs ./data/cecal_qiime/SEQ069/s69_paired_end_seqs.qza \
            --o-per-sample-sequences ./data/cecal_qiime/SEQ069/s69_demux.qza \
            --o-error-correction-details ./data/cecal_qiime/SEQ069/s69_demux_details.qza \
            --p-no-golay-error-correction
        
        qiime demux summarize \
            --i-data ./data/cecal_qiime/SEQ069/s69_demux.qza \
            --o-visualization ./data/cecal_qiime/SEQ069/s69_demux.qzv
        """


rule seq070_demultiplex:
    input:
        "data/cecal_qiime/SEQ070/cecal_s70_barcodes.txt",
        "data/cecal_qiime/SEQ070/s70_paired_end_seqs.qza"
    output:
        "data/cecal_qiime/SEQ070/s70_demux.qza",
        "data/cecal_qiime/SEQ070/s70_demux_details.qza",
        "data/cecal_qiime/SEQ070/s70_demux.qzv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime demux emp-paired \
            --m-barcodes-file ./data/cecal_qiime/SEQ070/cecal_s70_barcodes.txt \
            --m-barcodes-column BarcodeSequence \
            --i-seqs ./data/cecal_qiime/SEQ070/s70_paired_end_seqs.qza \
            --o-per-sample-sequences ./data/cecal_qiime/SEQ070/s70_demux.qza \
            --o-error-correction-details ./data/cecal_qiime/SEQ070/s70_demux_details.qza \
            --p-no-golay-error-correction
        
        qiime demux summarize \
            --i-data ./data/cecal_qiime/SEQ070/s70_demux.qza \
            --o-visualization ./data/cecal_qiime/SEQ070/s70_demux.qzv
        """


rule seq071_demultiplex:
    input:
        "data/cecal_qiime/SEQ071/cecal_s71_barcodes.txt",
        "data/cecal_qiime/SEQ071/s71_paired_end_seqs.qza"
    output:
        "data/cecal_qiime/SEQ071/s71_demux.qza",
        "data/cecal_qiime/SEQ071/s71_demux_details.qza",
        "data/cecal_qiime/SEQ071/s71_demux.qzv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime demux emp-paired \
            --m-barcodes-file ./data/cecal_qiime/SEQ071/cecal_s71_barcodes.txt \
            --m-barcodes-column BarcodeSequence \
            --i-seqs ./data/cecal_qiime/SEQ071/s71_paired_end_seqs.qza \
            --o-per-sample-sequences ./data/cecal_qiime/SEQ071/s71_demux.qza \
            --o-error-correction-details ./data/cecal_qiime/SEQ071/s71_demux_details.qza \
            --p-no-golay-error-correction

        qiime demux summarize \
            --i-data ./data/cecal_qiime/SEQ071/s71_demux.qza \
            --o-visualization ./data/cecal_qiime/SEQ071/s71_demux.qzv
        """

## do all three runs need to be trimmed/truncated at the same place bc they will be joined together later? - yes!
rule seq069_dada2:
    input:
        "data/cecal_qiime/SEQ069/s69_demux.qza"
    output:
        "data/cecal_qiime/SEQ069/s69_table.qza",
        "data/cecal_qiime/SEQ069/s69_rep_seqs.qza",
        "data/cecal_qiime/SEQ069/s69_denoise_stats.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime dada2 denoise-paired \
            --i-demultiplexed-seqs ./data/cecal_qiime/SEQ069/s69_demux.qza \
            --p-trim-left-f 13 \
            --p-trim-left-r 13 \
            --p-trunc-len-f 230 \
            --p-trunc-len-r 160 \
            --o-table ./data/cecal_qiime/SEQ069/s69_table.qza \
            --o-representative-sequences ./data/cecal_qiime/SEQ069/s69_rep_seqs.qza \
            --o-denoising-stats ./data/cecal_qiime/SEQ069/s69_denoise_stats.qza
        """


rule seq070_dada2:
    input:
        "data/cecal_qiime/SEQ070/s70_demux.qza"
    output:
        "data/cecal_qiime/SEQ070/s70_table.qza",
        "data/cecal_qiime/SEQ070/s70_rep_seqs.qza",
        "data/cecal_qiime/SEQ070/s70_denoise_stats.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime dada2 denoise-paired \
            --i-demultiplexed-seqs ./data/cecal_qiime/SEQ070/s70_demux.qza \
            --p-trim-left-f 13 \
            --p-trim-left-r 13 \
            --p-trunc-len-f 230 \
            --p-trunc-len-r 160 \
            --o-table ./data/cecal_qiime/SEQ070/s70_table.qza \
            --o-representative-sequences ./data/cecal_qiime/SEQ070/s70_rep_seqs.qza \
            --o-denoising-stats ./data/cecal_qiime/SEQ070/s70_denoise_stats.qza
        """


rule seq071_dada2:
    input:
        "data/cecal_qiime/SEQ071/s71_demux.qza"
    output:
        "data/cecal_qiime/SEQ071/s71_table.qza",
        "data/cecal_qiime/SEQ071/s71_rep_seqs.qza",
        "data/cecal_qiime/SEQ071/s71_denoise_stats.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime dada2 denoise-paired \
            --i-demultiplexed-seqs ./data/cecal_qiime/SEQ071/s71_demux.qza \
            --p-trim-left-f 13 \
            --p-trim-left-r 13 \
            --p-trunc-len-f 230 \
            --p-trunc-len-r 160 \
            --o-table ./data/cecal_qiime/SEQ071/s71_table.qza \
            --o-representative-sequences ./data/cecal_qiime/SEQ071/s71_rep_seqs.qza \
            --o-denoising-stats ./data/cecal_qiime/SEQ071/s71_denoise_stats.qza
        """


rule merge_run_tables:
    input:
        "data/cecal_qiime/SEQ069/s69_table.qza",
        "data/cecal_qiime/SEQ070/s70_table.qza",
        "data/cecal_qiime/SEQ071/s71_table.qza",
        "data/cecal_qiime/SEQ069/s69_rep_seqs.qza",
        "data/cecal_qiime/SEQ070/s70_rep_seqs.qza",
        "data/cecal_qiime/SEQ071/s71_rep_seqs.qza"
    output:
        "data/cecal_qiime/all_cecal_table.qza",
        "data/cecal_qiime/all_cecal_rep_seqs.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime feature-table merge \
            --i-tables ./data/cecal_qiime/SEQ069/s69_table.qza \
            --i-tables ./data/cecal_qiime/SEQ070/s70_table.qza \
            --i-tables ./data/cecal_qiime/SEQ071/s71_table.qza \
            --o-merged-table ./data/cecal_qiime/all_cecal_table.qza

        qiime feature-table merge-seqs \
            --i-data ./data/cecal_qiime/SEQ069/s69_rep_seqs.qza \
            --i-data ./data/cecal_qiime/SEQ070/s70_rep_seqs.qza \
            --i-data ./data/cecal_qiime/SEQ071/s71_rep_seqs.qza \
            --o-merged-data ./data/cecal_qiime/all_cecal_rep_seqs.qza
        """


rule get_reference_databases:
    output:
        "databases/sepp-refs-silva-128.qza",
        "databases/silva-138-99-515-806-nb-classifier.qza"
    shell:
        """
        wget https://data.qiime2.org/2023.5/common/sepp-refs-silva-128.qza -P ./databases/
        wget https://data.qiime2.org/2023.5/common/silva-138-99-515-806-nb-classifier.qza -P ./databases/
        """


rule sepp_phylo_tree:
    input:
        "data/cecal_qiime/all_cecal_rep_seqs.qza",
        "databases/sepp-refs-silva-128.qza"
    output:
        "data/cecal_qiime/tree.qza",
        "data/cecal_qiime/placements.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime fragment-insertion sepp \
            --i-representative-sequences ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --i-reference-database ./databases/sepp-refs-silva-128.qza \
            --o-tree ./data/cecal_qiime/tree.qza \
            --o-placements ./data/cecal_qiime/placements.qza
        """


rule sepp_ASV_filtering:
    input:
        "data/cecal_qiime/all_cecal_table.qza",
        "data/cecal_qiime/tree.qza"
    output:
        "data/cecal_qiime/filt_cecal_table.qza",
        "data/cecal_qiime/rem_cecal_table.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime fragment-insertion filter-features \
            --i-table ./data/cecal_qiime/all_cecal_table.qza \
            --i-tree ./data/cecal_qiime/tree.qza \
            --o-filtered-table ./data/cecal_qiime/filt_cecal_table.qza \
            --o-removed-table ./data/cecal_qiime/rem_cecal_table.qza
        """


rule taxonomic_classification:
    input:
        "databases/silva-138-99-515-806-nb-classifier.qza",
        "data/cecal_qiime/all_cecal_rep_seqs.qza"
    output:
        "data/cecal_qiime/taxonomy.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime feature-classifier classify-sklearn \
            --i-classifier ./databases/silva-138-99-515-806-nb-classifier.qza \
            --i-reads ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --o-classification ./data/cecal_qiime/taxonomy.qza
        """


rule filter_taxonomy:
    input:
        "data/cecal_qiime/filt_cecal_table.qza",
        "data/cecal_qiime/taxonomy.qza"
    output:
        "data/cecal_qiime/taxonomy_filtered.qza",
        "data/cecal_qiime/taxonomy_filtered.qzv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime taxa filter-table \
            --i-table ./data/cecal_qiime/filt_cecal_table.qza \
            --i-taxonomy ./data/cecal_qiime/taxonomy.qza \
            --p-include p_ \
            --p-exclude mitochondria,chloroplast \
            --o-filtered-table ./data/cecal_qiime/taxonomy_filtered.qza
        
        qiime feature-table summarize \
            --i-table ./data/cecal_qiime/taxonomy_filtered.qza \
            --o-visualization ./data/cecal_qiime/taxonomy_filtered.qzv
        """

## from here on, this will follow the same steps as the colon pipeline (depending on the lactococccus contam)
## convert rep-seqs to a fasta file for total sum scaling?? - yes, do this
rule create_lacto_table:
    input:
        "data/cecal_qiime/filt_cecal_table.qza",
        "data/cecal_qiime/taxonomy.qza",
        "data/cecal_qiime/all_cecal_rep_seqs.qza"
    output:
        "data/cecal_qiime/lacto_cecal_table.qza",
        "data/cecal_qiime/lacto_rep_seqs.qza" 
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime taxa filter-table \
            --i-table ./data/cecal_qiime/filt_cecal_table.qza \
            --i-taxonomy ./data/cecal_qiime/taxonomy.qza \
            --p-include Lactococcus \
            --o-filtered-table ./data/cecal_qiime/lacto_cecal_table.qza
        
        qiime feature-table filter-seqs \
            --i-data ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --i-table ./data/cecal_qiime/lacto_cecal_table.qza \
            --o-filtered-data ./data/cecal_qiime/lacto_rep_seqs.qza
        """


rule convert_to_fasta:
    input:
        "data/cecal_qiime/lacto_rep_seqs.qza"
    output:
        "data/cecal_qiime/lactoOnly_rep_seqs.fasta"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/cecal_qiime/lacto_rep_seqs.qza \
            --output-path ./data/cecal_qiime
        
        mv ./data/cecal_qiime/dna-sequences.fasta ./data/cecal_qiime/lactoOnly_rep_seqs.fasta
        """


rule total_sum_scaling:
    input:
        biom = "data/cecal_qiime/filt_cecal_table.qza",
        asvs = "data/cecal_qiime/lactoOnly_rep_seqs.fasta"
    output:
        table = "data/cecal_qiime/total_sum_scaling.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/total_sum_scaling.R --biom {input.biom} \
                                            --sequence {input.asvs} \
                                            --output {output.table}
        """


rule tss_tsv2biom:
    input:
       "data/cecal_qiime/total_sum_scaling.tsv" 
    output:
        "data/cecal_qiime/total_sum_scaling.biom"
    conda:
        "qiime2-2023.5"
    shell:
        """
        biom convert \
            -i ./data/cecal_qiime/total_sum_scaling.tsv \
            -o ./data/cecal_qiime/total_sum_scaling.biom \
            --table-type "Table" \
            --to-hdf5
        """

rule tss_biom2qza:
    input:
        "data/cecal_qiime/total_sum_scaling.biom"
    output:
        "data/cecal_qiime/total_sum_scaling.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools import \
            --input-path ./data/cecal_qiime/total_sum_scaling.biom \
            --type 'FeatureTable[Frequency]' \
            --output-path ./data/cecal_qiime/total_sum_scaling.qza
        """


rule rep_seqs2fasta:
    input:
        "data/cecal_qiime/all_cecal_rep_seqs.qza"
    output:
        "data/cecal_qiime/fasta_files/dna-sequences.fasta"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --output-path ./data/cecal_qiime/fasta_files
        """


rule sepp_phylo_tree2:
    input:
        "data/cecal_qiime/all_cecal_rep_seqs.qza",
        "databases/sepp-refs-silva-128.qza"
    output:
        "data/cecal_qiime2/tree.qza",
        "data/cecal_qiime2/placements.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime fragment-insertion sepp \
            --i-representative-sequences ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --i-reference-database ./databases/sepp-refs-silva-128.qza \
            --o-tree ./data/cecal_qiime2/tree.qza \
            --o-placements ./data/cecal_qiime2/placements.qza
        """


rule sepp_ASV_filtering2:
    input:
        "data/cecal_qiime/total_sum_scaling.qza",
        "data/cecal_qiime2/tree.qza"
    output:
        "data/cecal_qiime2/total_sum_filt_table.qza",
        "data/cecal_qiime2/total_sum_rem_table.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime fragment-insertion filter-features \
            --i-table ./data/cecal_qiime/total_sum_scaling.qza \
            --i-tree ./data/cecal_qiime2/tree.qza \
            --o-filtered-table ./data/cecal_qiime2/total_sum_filt_table.qza \
            --o-removed-table ./data/cecal_qiime2/total_sum_rem_table.qza
        """


rule taxonomic_classification2:
    input:
        "databases/silva-138-99-515-806-nb-classifier.qza",
        "data/cecal_qiime/all_cecal_rep_seqs.qza"
    output:
        "data/cecal_qiime2/taxonomy.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime feature-classifier classify-sklearn \
            --i-classifier ./databases/silva-138-99-515-806-nb-classifier.qza \
            --i-reads ./data/cecal_qiime/all_cecal_rep_seqs.qza \
            --o-classification ./data/cecal_qiime2/taxonomy.qza
        """

rule filter_taxonomy2:
    input:
        "data/cecal_qiime/total_sum_scaling.qza",
        "data/cecal_qiime2/taxonomy.qza"
    output:
        "data/cecal_qiime2/taxonomy_filtered.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime taxa filter-table \
            --i-table ./data/cecal_qiime/total_sum_scaling.qza \
            --i-taxonomy ./data/cecal_qiime2/taxonomy.qza \
            --p-include p_ \
            --p-exclude mitochondria,chloroplast \
            --o-filtered-table ./data/cecal_qiime2/taxonomy_filtered.qza
        """

rule filter_taxonomy_vis2:
    input:
        "data/cecal_qiime2/taxonomy_filtered.qza"
    output:
        "data/cecal_qiime2/taxonomy_filtered.qzv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime feature-table summarize \
            --i-table ./data/cecal_qiime2/taxonomy_filtered.qza \
            --o-visualization ./data/cecal_qiime2/taxonomy_filtered.qzv
        """

## RERUN FROM NOW ON WITH REPLICATE ONE FILTERED OUT OF THE METADATA
rule pre_core_metrics_filter:
    input:
        "data/cecal_qiime2/taxonomy_filtered.qza",
        "data/misc/cecal_metadata.tsv"
    output:
        "data/cecal_qiime2/tax_filt_actual.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime feature-table filter-samples \
            --i-table ./data/cecal_qiime2/taxonomy_filtered.qza \
            --m-metadata-file ./data/misc/cecal_metadata.tsv \
            --o-filtered-table ./data/cecal_qiime2/tax_filt_actual.qza
        """

rule core_metrics_analysis:
##  NEED TO CHECK THE SAMPLING DEPTH BEFORE YOU RUN THIS STEP
    input:
        "data/cecal_qiime2/tree.qza",
        "data/cecal_qiime2/tax_filt_actual.qza",
        "data/misc/cecal_metadata.tsv"
    output:
        "data/core_outputs/bray_curtis_distance_matrix.qza",
        "data/core_outputs/bray_curtis_emperor.qzv",
        "data/core_outputs/bray_curtis_pcoa_results.qza",
        "data/core_outputs/evenness_vector.qza",
        "data/core_outputs/faith_pd_vector.qza",
        "data/core_outputs/jaccard_distance_matrix.qza",
        "data/core_outputs/jaccard_emperor.qzv",
        "data/core_outputs/jaccard_pcoa_results.qza",
        "data/core_outputs/observed_features_vector.qza",
        "data/core_outputs/rarefied_table.qza",
        "data/core_outputs/shannon_vector.qza",
        "data/core_outputs/unweighted_unifrac_distance_matrix.qza",
        "data/core_outputs/unweighted_unifrac_emperor.qzv",
        "data/core_outputs/unweighted_unifrac_pcoa_results.qza",
        "data/core_outputs/weighted_unifrac_distance_matrix.qza",
        "data/core_outputs/weighted_unifrac_emperor.qzv",
        "data/core_outputs/weighted_unifrac_pcoa_results.qza"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime diversity core-metrics-phylogenetic \
            --i-phylogeny ./data/cecal_qiime2/tree.qza \
            --i-table ./data/cecal_qiime2/tax_filt_actual.qza \
            --p-sampling-depth  99631 \
            --m-metadata-file ./data/misc/cecal_metadata.tsv \
            --o-rarefied-table ./data/core_outputs/rarefied_table.qza \
            --o-faith-pd-vector ./data/core_outputs/faith_pd_vector.qza \
            --o-observed-features-vector ./data/core_outputs/observed_features_vector.qza \
            --o-shannon-vector ./data/core_outputs/shannon_vector.qza \
            --o-evenness-vector ./data/core_outputs/evenness_vector.qza \
            --o-unweighted-unifrac-distance-matrix ./data/core_outputs/unweighted_unifrac_distance_matrix.qza \
            --o-weighted-unifrac-distance-matrix ./data/core_outputs/weighted_unifrac_distance_matrix.qza \
            --o-jaccard-distance-matrix ./data/core_outputs/jaccard_distance_matrix.qza \
            --o-bray-curtis-distance-matrix ./data/core_outputs/bray_curtis_distance_matrix.qza \
            --o-unweighted-unifrac-pcoa-results ./data/core_outputs/unweighted_unifrac_pcoa_results.qza \
            --o-weighted-unifrac-pcoa-results ./data/core_outputs/weighted_unifrac_pcoa_results.qza \
            --o-jaccard-pcoa-results ./data/core_outputs/jaccard_pcoa_results.qza \
            --o-bray-curtis-pcoa-results ./data/core_outputs/bray_curtis_pcoa_results.qza \
            --o-unweighted-unifrac-emperor ./data/core_outputs/unweighted_unifrac_emperor.qzv \
            --o-weighted-unifrac-emperor ./data/core_outputs/weighted_unifrac_emperor.qzv \
            --o-jaccard-emperor ./data/core_outputs/jaccard_emperor.qzv \
            --o-bray-curtis-emperor ./data/core_outputs/bray_curtis_emperor.qzv
        """

rule unzip_uw_distance_matrix:
    input:
       "data/core_outputs/unweighted_unifrac_distance_matrix.qza" 
    output:
        "data/core_outputs/uw_dist_matrix.tsv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/core_outputs/unweighted_unifrac_distance_matrix.qza \
            --output-path ./data/core_outputs/uw_dist_matrix
        
        mv ./data/core_outputs/uw_dist_matrix/distance-matrix.tsv \
        ./data/core_outputs/uw_dist_matrix/uw_dist_matrix.tsv

        mv ./data/core_outputs/uw_dist_matrix/uw_dist_matrix.tsv \
        ./data/core_outputs/
        """


rule unzip_w_distance_matrix:
    input:
       "data/core_outputs/weighted_unifrac_distance_matrix.qza"
    output:
        "data/core_outputs/w_dist_matrix.tsv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/core_outputs/weighted_unifrac_distance_matrix.qza \
            --output-path ./data/core_outputs/w_dist_matrix
        
        mv ./data/core_outputs/w_dist_matrix/distance-matrix.tsv \
        ./data/core_outputs/w_dist_matrix/w_dist_matrix.tsv

        mv ./data/core_outputs/w_dist_matrix/w_dist_matrix.tsv \
        ./data/core_outputs/ 
        """


rule unzip_shannon:
    input:
        "data/core_outputs/shannon_vector.qza"
    output:
        "data/core_outputs/shannon_entropy.tsv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/core_outputs/shannon_vector.qza \
            --output-path ./data/core_outputs/shannon_entropy
        
        mv ./data/core_outputs/shannon_entropy/alpha-diversity.tsv \
        ./data/core_outputs/shannon_entropy/shannon_entropy.tsv

        mv ./data/core_outputs/shannon_entropy/shannon_entropy.tsv \
        ./data/core_outputs/
        """


rule unzip_faith_pd:
    input:
        "data/core_outputs/faith_pd_vector.qza"
    output:
        "data/core_outputs/faith_pd.tsv"
    conda:
        "qiime2-2023.5"
    shell:
        """
        qiime tools export \
            --input-path ./data/core_outputs/faith_pd_vector.qza \
            --output-path ./data/core_outputs/faith_pd
        
        mv ./data/core_outputs/faith_pd/alpha-diversity.tsv \
        ./data/core_outputs/faith_pd/faith_pd.tsv

        mv ./data/core_outputs/faith_pd/faith_pd.tsv \
        ./data/core_outputs/
        """


rule sequencing_depth_calculation:
    input:
        biom = "data/cecal_qiime/filt_cecal_table.qza",
        asvs = "data/cecal_qiime/lactoOnly_rep_seqs.fasta"
    output:
        table = "data/misc/seq_depth.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/seq_depth.R --biom {input.biom} \
                                    --sequence {input.asvs} \
                                    --output {output.table}
        """


rule metadata_processing:
    input:
        metadata = "data/misc/updated_cecal_metadata.tsv",
        cecal_key = "data/misc/cecal_key.txt",
        seq_depth = "data/misc/seq_depth.tsv",
        id_file = "data/misc/mouseID_facil.tsv"
    output:
        table = "data/misc/cecal_processed_metadata.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/metadata_processing.R --metadata {input.metadata} \
                                              --cecal_key {input.cecal_key} \
                                              --seq_depth {input.seq_depth} \
                                              --mouse_id_facil {input.id_file} \
                                              --output {output.table}
        """


rule alpha_diversity_plots:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        faith_pd = "data/core_outputs/faith_pd.tsv",
        shannon = "data/core_outputs/shannon_entropy.tsv"
    output:
        faith_plot = "plots/faith_pd.pdf",
        shannon_plot = "plots/shannon_entropy.pdf"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/alpha_div_plots.R --metadata {input.metadata} \
                                          --faith_pd {input.faith_pd} \
                                          --shannon {input.shannon} \
                                          --output_faith {output.faith_plot} \
                                          --output_shannon {output.shannon_plot}
        """


rule alpha_diversity_stats:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        faith_pd = "data/core_outputs/faith_pd.tsv",
        shannon = "data/core_outputs/shannon_entropy.tsv"
    output:
        faith_lm_sec = "stats/faith_diet_results.tsv",
        faith_dunn = "stats/faith_dunn.tsv",
        shannon_lm_sec = "stats/shannon_diet_results.tsv",
        shannon_dunn = "stats/shannon_dunn.tsv",
        faith_plot = "plots/faith_stat_vis.pdf",
        shannon_plot = "plots/shannon_stat_vis.pdf"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/alpha_div_stats.R --metadata {input.metadata} \
                                          --faith_pd {input.faith_pd} \
                                          --shannon {input.shannon} \
                                          --faith_lm_sec {output.faith_lm_sec} \
                                          --faith_dunn {output.faith_dunn} \
                                          --shannon_lm_sec {output.shannon_lm_sec} \
                                          --shannon_dunn {output.shannon_dunn} \
                                          --faith_plot {output.faith_plot} \
                                          --shannon_plot {output.shannon_plot}
        """


rule beta_diversity_plots:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        unweighted_uni = "data/core_outputs/unweighted_unifrac_pcoa_results.qza",
        weighted_uni = "data/core_outputs/weighted_unifrac_pcoa_results.qza",
        faith_pd = "data/core_outputs/faith_pd.tsv",
        shannon = "data/core_outputs/shannon_entropy.tsv"
    output:
        unweighted_plot = "plots/unweighted_unifrac_pcoa.pdf",
        weighted_plot = "plots/weighted_unifrac_pcoa.pdf"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/beta_div_plots.R --metadata {input.metadata} \
                                         --unweighted_unifrac {input.unweighted_uni} \
                                         --weighted_unifrac {input.weighted_uni} \
                                         --faith_pd {input.faith_pd} \
                                         --shannon {input.shannon} \
                                         --output_uu {output.unweighted_plot} \
                                         --output_wu {output.weighted_plot}
        """


rule beta_diversity_stats:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        uw_dist = "data/core_outputs/uw_dist_matrix.tsv",
        w_dist = "data/core_outputs/w_dist_matrix.tsv"
    output:
        w_adonis = "stats/w_adonis_results.tsv",
        uw_adonis = "stats/uw_adonis_results.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/beta_div_stats.R --metadata {input.metadata} \
                                         --uu_dist {input.uw_dist} \
                                         --wu_dist {input.w_dist} \
                                         --uu_adonis {output.uw_adonis} \
                                         --wu_adonis {output.w_adonis}
        """


rule family_abundance_plots:
    input:
        otu_table = "data/cecal_qiime2/tax_filt_actual.qza",
        taxonomy = "data/cecal_qiime2/taxonomy.qza",
        metadata = "data/misc/cecal_processed_metadata.tsv"
    output:
        plot1 = "plots/family_abun1.pdf",
        plot2 = "plots/family_abun2.pdf"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/family_abun_plots.R --metadata {input.metadata} \
                                            --otu {input.otu_table} \
                                            --taxonomy {input.taxonomy} \
                                            --plot1 {output.plot1} \
                                            --plot2 {output.plot2}
        """


rule family_abundance_stats:
    input:
       otu_table = "data/cecal_qiime2/tax_filt_actual.qza",
       taxonomy = "data/cecal_qiime2/taxonomy.qza",
       metadata = "data/misc/cecal_processed_metadata.tsv"
    output:
        lm = "stats/family_abun_lm.tsv",
        dunn = "stats/family_abun_dunn.tsv",
        stat_plot = "plots/famAbun_stat_vis.pdf"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/family_abun_stats.R --metadata {input.metadata} \
                                            --otu {input.otu_table} \
                                            --taxonomy {input.taxonomy} \
                                            --stat_plot {output.stat_plot} \
                                            --linear_model {output.lm} \
                                            --dunn {output.dunn}
        """


rule histopathology:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        histo = "data/misc/histo_data.csv"
    output:
        plot = "plots/histopathology.pdf",
        lm = "stats/histopathology_lm.tsv",
        dunn = "stats/histopathology_dunn.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/histopathology.R --metadata {input.metadata} \
                                         --histo {input.histo} \
                                         --histo_plot {output.plot} \
                                         --linear_model {output.lm} \
                                         --dunn {output.dunn}
        """


rule toxin:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        toxin = "data/misc/toxin_final_data.tsv"
    output:
        neat_plot = "plots/neat_toxin.pdf",
        diluted_plot = "plots/dil_toxin.pdf",
        neat_kruskal = "stats/neatToxin_kruskal_test.tsv",
        neat_dunn = "stats/neatToxin_dunn_test.tsv",
        dil_kruskal = "stats/dilToxin_kruskal_test.tsv",
        dil_dunn = "stats/dilToxin_dunn_test.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/toxin.R --metadata {input.metadata} \
                                --toxin {input.toxin} \
                                --neat_plot {output.neat_plot} \
                                --diluted_plot {output.diluted_plot} \
                                --neat_kruskal {output.neat_kruskal} \
                                --neat_dunn {output.neat_dunn} \
                                --diluted_kruskal {output.dil_kruskal} \
                                --diluted_dunn {output.dil_dunn}
        """


rule metabolomics:
    input:
        metadata = "data/misc/cecal_processed_metadata.tsv",
        metab = "data/misc/metabolomics.csv"
    output:
        metab_plot = "plots/metabolomics.pdf",
        metab_lm = "stats/metab_linear_model.tsv",
        metab_dunn = "stats/metab_dunn_test.tsv",
        metab_kruskal = "stats/metab_kruskal_test.tsv"
    conda:
        "r_env"
    shell:
        """
        Rscript scripts/metab.R --metadata {input.metadata} \
                                --metab {input.metab} \
                                --metab_plot {output.metab_plot} \
                                --metab_lm {output.metab_lm} \
                                --metab_dunn {output.metab_dunn} \
                                --metab_kruskal {output.metab_kruskal}
        """