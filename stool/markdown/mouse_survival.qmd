---
title: "mouse_survival"
format: html
editor: visual
---

```{r, include=FALSE}
library(tidyverse)
library(survminer)
require(survival)
library(readr)
library(viridis)
```

**Input File Path**

```{r}
survival_fp <- '../data/misc/aim1a_survival.csv'
diet_labs <- 
  c('Chow', 
    'High Fat / High Fiber', 
    'High Fat / Low Fiber', 
    'Low Fat / High Fiber', 
    'Low Fat / Low Fiber')
names(diet_labs) <- c('chow',
                      'HF+fiber',
                      'HF/LF',
                      'LF+fiber',
                      'LF/LF')

fib_labs <- c('High Fiber',
              'Low Fiber')
names(fib_labs) <- c('high_fiber',
                     'low_fiber')

fat_labs <- c('High Fat',
              'Low Fat')
names(fat_labs) <- c('high_fat',
                     'low_fat')
```

**Reading in Mouse Survival Data**

col_types tells R what to classify the data in each column as

```{r}
survival <- read_csv(survival_fp,
                     col_types = cols(Day = col_integer(),
                                      status = col_integer(), 
                                      diet = col_character(),
                                      group = col_integer()))

spore_survival <- survival %>% 
  filter(inf_stock == 'spores')

liveCult_survival <- survival %>% 
  filter(inf_stock == 'culture')
```

## Spore Infection Survival Data

**Creating Survival Plot by Diet**

Legit can't figure out how to take color by diet off of this plot so rip.

```{r, fig.height=10, fig.width=15}
diet_fit <- surv_fit(Surv(Day, status) ~ diet, data = spore_survival)
ggsurvplot(diet_fit, 
           data = spore_survival,
           color = 'black',
           ggtheme = theme_bw(base_size = 20),
           legend = "none",
           conf.int = TRUE, 
           xlab = 'Days Post Infection',
           ylab = 'Survival Probability',
           title = 'Mouse Survival After Infection by Diet') -> diet_plot

diet_plot$plot +
    facet_wrap(~factor(diet, levels = c('chow',
                                        'HF+fiber',
                                        'HF/LF',
                                        'LF+fiber',
                                        'LF/LF')),
               labeller = labeller(.cols = diet_labs),
               nrow = 2) +
    scale_fill_grey() -> diet_plot_final

diet_plot_final
```

**Pairwise Comparisons**

```{r}
pairwise_survdiff(Surv(Day, status) ~ diet,
                  data = spore_survival, 
                  p.adjust.method = "BH") -> diet_pairwise

diet_pvalue <- as_tibble(diet_pairwise$p.value,
                         rownames = 'diet')

## changing format from wide to long so I can work with it 
diet_pvalue %>% 
  gather(-diet, key = diet2, value = p.value) -> diet_pvalue

names(diet_pvalue)[names(diet_pvalue) == 'diet'] <- 'diet1'


diet_pvalue['signif'] <- symnum(diet_pvalue$p.value,
                                cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 0.1, 1),
                                symbols = c("****", "***", "**", "*", "+", "ns"),
                                abbr.colnames = FALSE,
                                na = "")

```

**Pairwise Comparison Visualization**

```{r, fig.height=3, fig.width=4.5}
diet_pvalue %>%
  na.omit() %>% 
  ggplot(aes(x = diet2, y = diet1)) +
  geom_tile(aes(fill = p.value), alpha = 0.6, color = 'black') +
  geom_text(aes(label = signif), size = 5) +
  scale_fill_distiller(limits = c(0, 0.05), palette = 'Reds', name = "P-Value") +
  theme_bw(base_size = 20) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18),
        legend.position = 'none') +
  scale_x_discrete(labels = c("Chow",
                              "HFt/\nLFb",
                              "HFt/\nHFb",
                              "LFt/\nLFb")) +
  scale_y_discrete(labels = c("HFt / LFb",
                               "HFt / HFb",
                               "LFt / LFb",
                               "LFt / HFb")) -> surv_stat_vis

surv_stat_vis
```

**Cox PH for Diet**

```{r}
surv_obj <- Surv(time = spore_survival$Day, event = spore_survival$status)
spore_survival$diet_f = factor(spore_survival$diet, 
                         levels = c("HF/LF", 
                                    "LF+fiber",
                                    "LF/LF", 
                                    "chow", 
                                    "HF+fiber"))
diet.fit.cox <- coxph(surv_obj ~ diet_f, data = spore_survival)
summary(diet.fit.cox)
```

**Putting Survival Plot by Diet with Statistical Visualization**

```{r, fig.width=20, fig.height=8}
plot_grid(diet_plot_final, surv_stat_vis,
          ncol = 2, 
          labels = c('a)', 'b)'),
          label_size = 22,
          rel_widths = c(1, 0.5))
```

## Live Culture Survival Data

**Survival Plot**

```{r, fig.height=7, fig.width=10}
liveCult_diet_fit <- surv_fit(Surv(Day, status) ~ diet, data = liveCult_survival)
ggsurvplot(liveCult_diet_fit, 
           data = liveCult_survival,
           color = 'black',
           ggtheme = theme_bw(base_size = 20),
           legend = "none",
           conf.int = TRUE, 
           xlab = 'Days Post Infection',
           ylab = 'Survival Probability',
           title = 'Mouse Survival After Infection by Diet (Live Cultures)') -> liveCult_diet_plot

liveCult_diet_plot$plot +
    facet_wrap(~factor(diet, levels = c('chow',
                                        'HF/LF',
                                        'LF/LF')),
               labeller = labeller(.cols = diet_labs),
               nrow = 2) +
    scale_fill_grey() -> liveCult_diet_plot_final

liveCult_diet_plot_final
```

**Pairwise Comparisons**

```{r}
pairwise_survdiff(Surv(Day, status) ~ diet,
                  data = liveCult_survival, 
                  p.adjust.method = "BH") -> liveCult_diet_pairwise

liveCult_diet_pvalue <- as_tibble(liveCult_diet_pairwise$p.value,
                         rownames = 'diet')

## changing format from wide to long so I can work with it 
liveCult_diet_pvalue %>% 
  gather(-diet, key = diet2, value = p.value) -> liveCult_diet_pvalue

names(liveCult_diet_pvalue)[names(liveCult_diet_pvalue) == 'diet'] <- 'diet1'


liveCult_diet_pvalue['signif'] <- symnum(liveCult_diet_pvalue$p.value,
                                        cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 0.1, 1),
                                        symbols = c("****", "***", "**", "*", "+", "ns"),
                                        abbr.colnames = FALSE,
                                        na = "")
```

**Pairwise Comparison Visualization**

```{r, fig.height=2.5, fig.width=3.5}
liveCult_diet_pvalue %>%
  na.omit() %>% 
  ggplot(aes(x = diet2, y = diet1)) +
  geom_tile(aes(fill = p.value), alpha = 0.6, color = 'black') +
  geom_text(aes(label = signif), size = 5) +
  scale_fill_distiller(limits = c(0, 0.05), palette = 'Reds', name = "P-Value") +
  theme_bw(base_size = 20) +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18),
        legend.position = 'none') +
  scale_x_discrete(labels = c("Chow",
                              "HFt/\nLFb")) +
  scale_y_discrete(labels = c("HFt / LFb",
                               "LFt / LFb")) -> liveCult_surv_stat_vis

liveCult_surv_stat_vis
```

**Putting Survival Plot by Diet with Statistical Visualization**

```{r, fig.height=10, fig.width=10}
liveCult_bottom_row <- plot_grid(liveCult_surv_stat_vis, NULL,
                                 rel_widths = c(0.65, 1),
                                 labels = c('b)', ' '),
                                 label_size = 20)

plot_grid(liveCult_diet_plot_final +
            theme_bw(base_size = 18),
          liveCult_bottom_row,
          rel_heights = c(1, 0.5),
          nrow = 2,
          labels = c('a)', ' '),
          align = 'h',
          label_size = 20) -> liveCult_surv_res

liveCult_surv_res
```

## Saving my Outputs

```{r}
## as a pdf
ggsave('../plots/survival_curve_all.pdf',
       plot = diet_plot_final,
       width = 15,
       height = 10)
ggsave('../plots/survival_curve_stats.pdf',
       plot = surv_stat_vis,
       width = 4.5,
       height = 3)
ggsave('../plots/liveCult_survival.pdf',
       plot = liveCult_surv_res,
       width = 10,
       height = 10)

## as an rdata object
save(diet_plot_final,
     file = '../../figures/survival.rdata')
save(surv_stat_vis,
     file = '../../figures/survival_stats.rdata')
```
